name: Build and Tag Release

env:
  SUPABASE_URL: 'https://wofmpmokrotlntuqjptl.supabase.co'
  SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndvZm1wbW9rcm90bG50dXFqcHRsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTI5MTUwMjcsImV4cCI6MjAyODQ5MTAyN30.7hTbaWkxDQ-lKctP6wICrQiuPA1AwJrEFgYdVztkSdE'
  FLUTTER_VERSION: '3.19.6'
  
on:
  push:
    branches:
      - main
      - test

permissions:
  contents: write  # Grant write permission to contents to push tags

jobs:
  get-release-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
         # Only get pubspec.yaml
         sparse-checkout: |
          /Frontend/pubspec.yaml
         sparse-checkout-cone-mode: false
        
      - name: Get the version from pubspec.yaml
        id: get_version
        working-directory: ./Frontend
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //' | tr -d '[:space:]')
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

  build_linux:
    needs: get-release-version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: flutter-actions/setup-flutter@v3.6
      with:
        channel: stable 
        version: ${{ env.FLUTTER_VERSION }}
        cache-sdk: true

    - name: Install dependencies
      working-directory: ./Frontend
      run: flutter pub get

    - name: Install build tools and GTK dependencies
      run: sudo apt-get install -y cmake ninja-build clang libgtk-3-dev

    - name: Build Linux release
      working-directory: ./Frontend
      run: flutter build linux --release --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

    - name: Install linuxdeploy and AppImage plugin
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        ./linuxdeploy-x86_64.AppImage --appimage-extract
        mv squashfs-root linuxdeploy

        wget https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
        chmod +x linuxdeploy-plugin-appimage-x86_64.AppImage
        ./linuxdeploy-plugin-appimage-x86_64.AppImage --appimage-extract
        mv squashfs-root appimage-plugin

    - name: Build AppImage
      run: |
        mkdir -p AppDir/usr/bin
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        # Log the contents of AppDir
        echo "Contents of AppDir:"
        find AppDir/
        # Run linuxdeploy and plugin
        ./linuxdeploy/AppRun --appdir AppDir --output appimage --plugin appimage --plugin AppDir/appimage-plugin/usr/bin/linuxdeploy-plugin-appimage
      env:
        ARCH: x86_64

    - name: Rename AppImage
      run: |
        mv *.AppImage DartinMolema-${{ needs.get-release-version.outputs.version }}-x86_64.AppImage

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DartinMolema-${{ needs.get-release-version.outputs.version }}-x86_64.AppImage
        path: DartinMolema-${{ needs.get-release-version.outputs.version }}-x86_64.AppImage

  build_android:
    needs: get-release-version
    runs-on: ubuntu-latest
    if: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup Flutter
      uses: flutter-actions/setup-flutter@v3.6
      with:
        channel: stable 
        version: ${{ env.FLUTTER_VERSION }}
        cache-sdk: true
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Setup build tool version variable
      shell: bash
      run: |
        BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
        echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
        echo Last build tool version is: $BUILD_TOOL_VERSION

    - name: Install dependencies
      working-directory: ./Frontend
      run: flutter pub get
    
    - name: Build APKs
      working-directory: ./Frontend
      run: |
        echo "Building apk with SUPABASE_URL=$SUPABASE_URL and SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY"
        flutter build apk --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY --split-per-abi

    - name: Sign APKs
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: ./Frontend/build/app/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: ${{env.BUILD_TOOL_VERSION}} # Specify the desired version here
    
    - name: Archive Signed APKs
      run: zip -j DartinMolema-${{needs.get-release-version.outputs.version}}-android-signed-archive.zip ./Frontend/build/app/outputs/apk/release/*-release-signed.apk

    - name: Upload signed app files
      uses: actions/upload-artifact@v4
      with:
        name: DartinMolema-${{needs.get-release-version.outputs.version}}-android-signed-archive.zip
        path: DartinMolema-${{needs.get-release-version.outputs.version}}-android-signed-archive.zip
  
  build_windows:
    needs: get-release-version
    runs-on: windows-latest
    if: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: flutter-actions/setup-flutter@v3.6
      with:
        channel: stable 
        version: ${{ env.FLUTTER_VERSION }}
        cache-sdk: true

    - name: Enable Windows desktop
      working-directory: ./Frontend
      run: flutter config --enable-windows-desktop

    - name: Install dependencies
      working-directory: ./Frontend
      run: flutter pub get
      
    - name: Build Windows EXE
      working-directory: ./Frontend
      run: echo "Building EXE with SUPABASE_URL=${{ env.SUPABASE_URL }} and SUPABASE_ANON_KEY=${{ env.SUPABASE_ANON_KEY }}" && flutter build windows --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY
      
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip
        directory: ./Frontend/build/windows/x64/runner/Release

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip
        path: ./Frontend/build/windows/x64/runner/Release/DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip

  build_apple:
    needs: get-release-version
    runs-on: macos-latest
    if: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3.6
        with:
          channel: stable 
          version: ${{ env.FLUTTER_VERSION }}
          cache-sdk: true

      - name: Install dependencies
        working-directory: ./Frontend
        run: flutter pub get

      - name: Build macOS application
        working-directory: ./Frontend
        run: flutter build macos --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

      - name: Create DMG
        run: |
          mkdir -p $PWD/dmg
          app_path="$PWD/Frontend/build/macos/Build/Products/Release/darts_application.app"
          dmg_path="$PWD/dmg/DartinMolema-${{needs.get-release-version.outputs.version}}.dmg"
          hdiutil create "$dmg_path" -volname "DartinMolema-${{needs.get-release-version.outputs.version}}" -srcfolder "$app_path" -ov -format UDZO

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: DartinMolema-${{needs.get-release-version.outputs.version}}.dmg
          path: dmg/DartinMolema-${{needs.get-release-version.outputs.version}}.dmg

      - name: Build IPA (iOS) File
        working-directory: ./Frontend
        run: flutter build ios --no-codesign --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

      - name: Rename Runner.app to DartinMolema
        run: |
          mv ./Frontend/build/ios/iphoneos/Runner.app DartinMolema-${{ needs.get-release-version.outputs.version }}-ios.app
        
      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: DartinMolema-${{ needs.get-release-version.outputs.version }}-ios.app
          path: DartinMolema-${{ needs.get-release-version.outputs.version }}-ios.app
    
  create_release:
    runs-on: ubuntu-latest
    needs: [get-release-version, build_linux] #, build_android, build_windows, build_apple

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: .
        merge-multiple: true

    - name: Create Release
      uses: ncipollo/release-action@v1.14.0
      if: ${{ success() }}
      with:
        artifacts: "DartinMolema-${{ needs.get-release-version.outputs.version }}-android-signed-archive.zip, DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip, DartinMolema-${{needs.get-release-version.outputs.version}}.dmg, DartinMolema-${{ needs.get-release-version.outputs.version }}-ios.app, DartinMolema-${{ needs.get-release-version.outputs.version }}-x86_64.AppImage"
        tag: 'v${{ needs.get-release-version.outputs.version }}'
        
