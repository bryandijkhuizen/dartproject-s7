name: Build and Tag Release

env:
  SUPABASE_URL: 'https://wofmpmokrotlntuqjptl.supabase.co'
  SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndvZm1wbW9rcm90bG50dXFqcHRsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTI5MTUwMjcsImV4cCI6MjAyODQ5MTAyN30.7hTbaWkxDQ-lKctP6wICrQiuPA1AwJrEFgYdVztkSdE'
  
on:
  push:
    branches:
      - main
      - test

permissions:
  contents: write  # Grant write permission to contents to push tags

jobs:
  get-release-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the version from pubspec.yaml
        id: get_version
        working-directory: ./Frontend
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //' | tr -d '[:space:]')
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

  build_android:
    needs: get-release-version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install required Android build tools
      run: |
        echo "Installing Android build tools"
        sdkmanager "build-tools;34.0.0"
    
    - name: Add build-tools to PATH
      run: echo "/usr/local/lib/android/sdk/build-tools/34.0.0" >> $GITHUB_PATH


    - name: Install dependencies
      working-directory: ./Frontend
      run: flutter pub get
    
    - name: Build APKs
      working-directory: ./Frontend
      run: |
        echo "Building apk with SUPABASE_URL=$SUPABASE_URL and SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY"
        flutter build apk --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY --split-per-abi

    - name: Sign APKs
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: ./Frontend/build/app/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Archive Release
      run: |
        mkdir -p release
        IFS=':' read -ra FILES <<< "${{ steps.sign_apks.outputs.signedReleaseFiles }}"
        for FILE in "${FILES[@]}"; do
          cp "$FILE" release/
        done
        zip -r DartinMolema-${{ needs.get-release-version.outputs.version }}-android-signed.zip release
      
    - name: Upload signed app files
      uses: actions/upload-artifact@v2
      with:
        name: DartinMolema-${{needs.get-release-version.outputs.version}}-android-signed
        path: DartinMolema-${{ needs.get-release-version.outputs.version }}-android-signed.zip

  build_windows:
    needs: get-release-version
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'

    - name: Enable Windows desktop
      working-directory: ./Frontend
      run: flutter config --enable-windows-desktop

    - name: Install dependencies
      working-directory: ./Frontend
      run: flutter pub get
      
    - name: Build Windows EXE
      working-directory: ./Frontend
      run: echo "Building EXE with SUPABASE_URL=${{ env.SUPABASE_URL }} and SUPABASE_ANON_KEY=${{ env.SUPABASE_ANON_KEY }}" && flutter build windows --dart-define=SUPABASE_URL=$SUPABASE_URL --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY
      
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip
        directory: ./Frontend/build/windows/x64/runner/Release

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DartinMolema-${{ needs.get-release-version.outputs.version }}-windows
        path: ./Frontend/build/windows/x64/runner/Release/DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip

  create_release:
    runs-on: ubuntu-latest
    needs: [get-release-version, build_android, build_windows]

    steps:
    - name: Download Android App bundle
      uses: actions/download-artifact@v4
      with:
        name: DartinMolema-${{needs.get-release-version.outputs.version}}-android-signed
        path: .

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: DartinMolema-${{ needs.get-release-version.outputs.version }}-windows
        path: .
  
    - name: Create Release
      uses: ncipollo/release-action@v1.14.0
      if: ${{ success() }}
      with:
        artifacts: "./DartinMolema-${{ needs.get-release-version.outputs.version }}-android.zip, ./DartinMolema-${{ needs.get-release-version.outputs.version }}-windows.zip"
        tag: 'v${{ needs.get-release-version.outputs.version }}'
        
